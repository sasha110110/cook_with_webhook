#!pip install selenium
#driver=r"C:\Users\User\AppData\Local\Programs\Python\Python37-32\say7\chromedriver.exe"
#driver="C:\Windows\chromedriver.exe"
from selenium import webdriver
import telebot
from bs4 import BeautifulSoup as bs

from selenium import webdriver

options = webdriver.ChromeOptions()
options.add_argument('--headless')
options.add_argument('--no-sandbox')
options.add_argument('--disable-dev-shm-usage')


browser=webdriver.Chrome('chromedriver',options=options)


import telebot
from bs4 import BeautifulSoup as bs

from telebot import apihelper


#bot = telebot.TeleBot(config.telebot_token)
#apihelper.proxy = {
  #'http', 'socks5://login:pass@12.11.22.33:8000',
  #'https', 'socks5://login:pass@12.11.22.33:8000'
#apihelper.proxy = {'https': 'https://23.237.22.172:1080'}

#proxies = {
       # 'http':'167.179.79.248:3128',
        #'https':'167.179.79.248:3128'}

#apihelper.proxy = {'https':'socks5h://186.126.55.30:1080'}

#apihelper.proxy=proxies
TOKEN = "1275733221:AAH0GeCdvoM_1MYzP6ImyfCXuN8FLUUijFg"
bot = telebot.TeleBot(TOKEN)

overall=[]


@bot.message_handler(commands=['start', 'go'])
def start_handler(message):
  global overall
  overall.clear()
  #global isRunning
  #if not isRunning:
  chat_id = message.chat.id
  text = message.text
  msg = bot.send_message(chat_id, 'Привет, называй блюдо!')
  bot.register_next_step_handler(msg, ask) #askSource
    #isRunning = True

def ask(message): #РЕЗУЛЬТАТ - ПЕРЕЧЕНЬ РЕЦЕПТОВ
  #global isRunning
  #global browser

  chat_id = message.chat.id
  q = message.text
  qq=q.replace(" ", "+")
  url = "https://www.say7.info/search.html?q="+qq
  browser.get(url)
  soup = bs(browser.page_source, 'html.parser')
  anchors = soup.find_all("a", class_ = "gs-title")
 

  for link in anchors:
    r=link.get_attribute_list("href")
    try:
      if r[0].endswith("html") and "Следующие" or "img" not in link.text:
        overall.append([r[0], link.text]) #([r[0], link.text])
    except AttributeError:
     pass

  for i, el in enumerate(overall):
    if i!=1 or i!=2:
    
      msg = bot.send_message(chat_id, str(i)+" "+el[1], "/n")
  msg = bot.send_message(chat_id, 'Пожалуйста, выбирай, какой больше по вкусу?')
  bot.register_next_step_handler(msg, give_result)

def give_result(message): 
  
  global overall
  
  chat_id = message.chat.id
  choice = int(message.text)
 
  for i, el in enumerate(overall):
    u=overall[choice][0]
   
  browser.get(u)
  sub_soup = bs(browser.page_source, 'html.parser')
  rec=[]
  #recepie=sub_soup.find("div", {'class' : "article h-recipe"})
  name=sub_soup.find("h1", {'itemprop' : "name"}).get_text()
  temp=[]
  ingr=sub_soup.find_all("li", {'class' : "p-ingredient"})
  for i in ingr:
    temp.append(i.get_text())
  inst=sub_soup.find("div", {'class' : "stepbystep e-instructions"}).get_text().replace("\n", " ").replace("\xa0", " ")
  rec.append([name, temp, inst])
  msg = bot.send_message(chat_id, name)
  msg1 = bot.send_message(chat_id, temp)
  msg2 = bot.send_message(chat_id, inst)
  #isRunning = False
  msg_1 = bot.send_message(chat_id, 'Посмотреть еще?')
  bot.register_next_step_handler(msg_1, continue_or_quit)

def continue_or_quit(message):
  chat_id = message.chat.id
  ms = message.text
  if ms=="ok": #"да".lower(): #TO DO - more vars
    bot_msg = bot.send_message(chat_id, "Тогда снова пиши номер")
    bot.register_next_step_handler(bot_msg, give_result)
    return
  browser.quit()
  browser.stop_client()

while True:
  try:
    bot.polling(none_stop=True,timeout=60,interval=10)
    break
  except Exception as e:
    logging.exception(e)
    sleep(10)
    continue
#bot.polling(none_stop=True)
  
#if __name__ == '__main__':
  #bot.infinity_polling()
